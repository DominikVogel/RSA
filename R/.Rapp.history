getPar(r1)
aictab(r1)
compare(r1)
plot(r1)
plot(r1, model="SRRR")
plot(r1, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
getPar(r1, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
r2 <- RSA(z~x*y, df)#
getPar(r2, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
r2 <- RSA(z2~x*y, df)#
getPar(r2, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
z2 <- 0.3*((x*S+C)-y)^2 + rnorm(100, 0, 0.3)#
#
df <- data.frame(x, y, z, z2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
r2 <- RSA(z2~x*y, df)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
getPar(r2, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
n <- 1000#
C1 <- 0.2#
S1 <- 0.8#
#
C2 <- 0.4#
S2 <- 0.7#
#
x <- rnorm(n)#
y <- rnorm(n)#
z <- 0.6*((x*S1+C1)-y)^2 + rnorm(n, 0, 0.3)#
z2 <- 0.3*((x*S2+C2)-y)^2 + rnorm(n, 0, 0.3)#
#
df <- data.frame(x, y, z, z2)#
#
r1 <- RSA(z~x*y, df, models=c("full", "SRSQD"))#
getPar(r1, model="SRSQD")#
#
r2 <- RSA(z2~x*y, df, models=c("full", "SRSQD"))#
getPar(r2, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
set.seed(0xBEEF)#
#
n <- 1000#
C1 <- 0.2#
S1 <- 0.8#
#
C2 <- 0.4#
S2 <- 0.8#
#
x <- rnorm(n)#
y <- rnorm(n)#
z <- 0.6*((x*S1+C1)-y)^2 + rnorm(n, 0, 0.1)#
z2 <- 0.3*((x*S2+C2)-y)^2 + rnorm(n, 0, 0.1)#
#
df <- data.frame(x, y, z, z2)#
#
r1 <- RSA(z~x*y, df, models=c("full", "SRSQD"))#
getPar(r1, model="SRSQD")#
#
r2 <- RSA(z2~x*y, df, models=c("full", "SRSQD"))#
getPar(r2, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
C2 <- 0.4#
S2 <- 0.4
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
z2 <- 0.3*((x*S2+C2)-y)^2 + rnorm(n, 0, 0.1)#
#
df <- data.frame(x, y, z, z2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
r2 <- RSA(z2~x*y, df, models=c("full", "SRSQD"))#
getPar(r2, model="SRSQD")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
set.seed(0xBEEF)#
#
n <- 1000#
C1 <- 0.2#
S1 <- 0.8#
#
C2 <- 0.2#
S2 <- 0.5#
#
x <- rnorm(n)#
y <- rnorm(n)#
z <- 0.6*((x*S1+C1)-y)^2 + rnorm(n, 0, 0.01)#
z2 <- 0.3*((x*S2+C2)-y)^2 + rnorm(n, 0, 0.01)#
#
df <- data.frame(x, y, z, z2)#
#
r1 <- RSA(z~x*y, df, models=c("full", "SRSQD"))#
getPar(r1, model="SRSQD")#
#
r2 <- RSA(z2~x*y, df, models=c("full", "SRSQD"))#
getPar(r2, model="SRSQD")
plot(r1)
plot(r2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
C2 <- 0.2#
S2 <- 0.1#
#
x <- rnorm(n)#
y <- rnorm(n)#
z <- 0.6*((x*S1+C1)-y)^2 + rnorm(n, 0, 0.01)#
z2 <- 0.3*((x*S2+C2)-y)^2 + rnorm(n, 0, 0.01)#
#
df <- data.frame(x, y, z, z2)#
#
r1 <- RSA(z~x*y, df, models=c("full", "SRSQD"))#
getPar(r1, model="SRSQD")#
#
r2 <- RSA(z2~x*y, df, models=c("full", "SRSQD"))#
getPar(r2, model="SRSQD")
plot(r2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
C1 <- 0.2#
S1 <- 10
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
z <- 0.6*((x*S1+C1)-y)^2 + rnorm(n, 0, 0.01)#
z2 <- 0.3*((x*S2+C2)-y)^2 + rnorm(n, 0, 0.01)#
#
df <- data.frame(x, y, z, z2)#
#
r1 <- RSA(z~x*y, df, models=c("full", "SRSQD"))#
getPar(r1, model="SRSQD")
plot(r1)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
S1 <- 10
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
z <- 0.6*((x*S1+C1)-y)^2 + rnorm(n, 0, 0.01)#
z2 <- 0.3*((x*S2+C2)-y)^2 + rnorm(n, 0, 0.01)#
#
df <- data.frame(x, y, z, z2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Test lambda')
r1 <- RSA(z~x*y, df, models=c("full", "SRSQD"))#
getPar(r1, model="SRSQD")
plot(r1)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
f4.1 <- fSRM(dep1 ~ actor.id*partner.id | family.id, two.indicators)
library(fSRM)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
f4.1 <- fSRM(dep1 ~ actor.id*partner.id | family.id, two.indicators)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
data(two.indicators)
f4.1 <- fSRM(dep1 ~ actor.id*partner.id | family.id, two.indicators)
f4.1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
plot(f4.1)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
plot(f4.1, means=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
f4.1 <- fSRM(dep1 ~ actor.id*partner.id | family.id, two.indicators, means=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
plot(f4.1)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
plot(f4.1, means=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
f4.2 <- fSRM(dep1/dep2 ~ actor.id*partner.id | family.id, two.indicators, means=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
plot(f4.2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
plot(f4.2, means=TRUE)
library(TripleR)
citation("TripleR")
citation("RSA")
fSRM.4.1 <- fSRM(value ~ actor.id*partner.id | family.id, data = clinical, means=TRUE)
data(clinical)
fSRM.4.1 <- fSRM(value ~ actor.id*partner.id | family.id, data = clinical, means=TRUE)
head(clinical)
fSRM.4.1 <- fSRM(neg ~ actor.id*partner.id | family.id, data = clinical, means=TRUE)
fSRM.4.1
plot(fSRM.4.1)
plot(fSRM.4.1, means=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::install()
plot(fSRM.4.1)
plot(fSRM.4.1, means=TRUE)
y <- fSRM.4.1
x <- fSRM.4.1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
relvar <- percTable(x, group=group)$stand#
	if (any(relvar[, 1:4] < 0) == TRUE) {#
		warning(paste("In group", group, "some variances are negative. Plot is not well-defined, please consider setting `noNegVar = TRUE` in the fSRM() call."), call.=FALSE)#
	}#
	relvar <- relvar[1:(nrow(relvar)-1), c("Family", "Actor", "Partner", "Relationship", "Error")]#
	relvar$dyad <- rownames(relvar)#
	if (onlyStable == TRUE) {#
		relvar$Sum <- 1 - relvar$Error#
		relvar$Error <- 0#
		for (i in 1:4) relvar[, i] <- relvar[, i]/relvar$Sum#
		relvar$Sum <- NULL#
	}#
#
	relvar.long <- melt(relvar, id.vars="dyad")#
	relvar.long$variable <- factor(relvar.long$variable, levels=rev(c("Family", "Actor", "Partner", "Relationship", "Error")))#
	relvar.long$dyad <- gsub("_", "-", relvar.long$dyad, fixed=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
sourceDir <- function(path, trace = TRUE, ...) {#
   for (nm in list.files(path, pattern = "\\.[RrSsQq]$")) {#
      if(trace) cat(nm,":")           #
      source(file.path(path, nm), ...)#
      if(trace) cat("\n")#
   }#
}#
#
sourceDir("../package/R")#
library(lavaan)#
library(plyr)#
library(reshape2)#
library(ggplot2)#
library(shape)#
library(grid)#
library(scales)#
library(gridExtra)#
#
# alternatively: load from GitHub#
#library(devtools)#
#install_github("fSRM", "felice303")#
#library(fSRM)
relvar <- percTable(x, group=group)$stand#
	if (any(relvar[, 1:4] < 0) == TRUE) {#
		warning(paste("In group", group, "some variances are negative. Plot is not well-defined, please consider setting `noNegVar = TRUE` in the fSRM() call."), call.=FALSE)#
	}#
	relvar <- relvar[1:(nrow(relvar)-1), c("Family", "Actor", "Partner", "Relationship", "Error")]#
	relvar$dyad <- rownames(relvar)#
	if (onlyStable == TRUE) {#
		relvar$Sum <- 1 - relvar$Error#
		relvar$Error <- 0#
		for (i in 1:4) relvar[, i] <- relvar[, i]/relvar$Sum#
		relvar$Sum <- NULL#
	}#
#
	relvar.long <- melt(relvar, id.vars="dyad")#
	relvar.long$variable <- factor(relvar.long$variable, levels=rev(c("Family", "Actor", "Partner", "Relationship", "Error")))#
	relvar.long$dyad <- gsub("_", "-", relvar.long$dyad, fixed=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
group=1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
onlyStable=FALSE
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
bw=FALSE
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
relvar <- percTable(x, group=group)$stand#
	if (any(relvar[, 1:4] < 0) == TRUE) {#
		warning(paste("In group", group, "some variances are negative. Plot is not well-defined, please consider setting `noNegVar = TRUE` in the fSRM() call."), call.=FALSE)#
	}#
	relvar <- relvar[1:(nrow(relvar)-1), c("Family", "Actor", "Partner", "Relationship", "Error")]#
	relvar$dyad <- rownames(relvar)#
	if (onlyStable == TRUE) {#
		relvar$Sum <- 1 - relvar$Error#
		relvar$Error <- 0#
		for (i in 1:4) relvar[, i] <- relvar[, i]/relvar$Sum#
		relvar$Sum <- NULL#
	}#
#
	relvar.long <- melt(relvar, id.vars="dyad")#
	relvar.long$variable <- factor(relvar.long$variable, levels=rev(c("Family", "Actor", "Partner", "Relationship", "Error")))#
	relvar.long$dyad <- gsub("_", "-", relvar.long$dyad, fixed=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
relvar.long$dyad
str(relvar.long$dyad)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
relvar.long$dyad <- factor(as.character(relvar.long$dyad), levels=sort(unique(relvar.long$dyad)))
str(relvar.long$dyad)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
levels(relvar.long$dyad)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
if (x$means == FALSE) stop("You have to provide a fSRM with mean structure; use: fSRM(..., means=TRUE)")#
    eff <- parameterEstimates(x$fit)#
	if (is.null(x$group)) {group <- ""}#
    est_act <- eff[grepl(paste0(".means", group, ".", style$actor, "."), eff$label, fixed=TRUE), c("lhs", "est")]#
	est_par <- eff[grepl(paste0(".means", group, ".", style$partner, "."), eff$label, fixed=TRUE), c("lhs", "est")]#
	est_rel <- eff[grepl(paste0(".means", group, ".", style$relationship, "."), eff$label, fixed=TRUE), c("lhs", "est")]#
  # Create axis & labels#
	aM <- attr(regexpr(paste0(style$actor, "."), est_act$lhs, fixed=TRUE), "match.length")#
	est_act$role <- substr(est_act$lhs, aM+1, nchar(est_act$lhs))	# actor labels#
#
	aP <- attr(regexpr(paste0(style$partner, "."), est_par$lhs, fixed=TRUE), "match.length")#
	est_par$role <- substr(est_par$lhs, aP+1, nchar(est_par$lhs))	# actor labels#
#
	aR <- attr(regexpr(paste0(style$relationship, "."), est_rel$lhs, fixed=TRUE), "match.length")#
	est_rel$role <- substr(est_rel$lhs, aR+1, nchar(est_rel$lhs))	# actor labels#
#
	FE <- eff[grepl(paste0(".means", group, ".FE"), eff$label, fixed=TRUE), c("est")]#
	res <- data.frame()#
	for (a in x$roles) {#
		for (p in x$roles) {#
			if (a != p) {#
				# start of arrow#
				res <- rbind(res, data.frame(#
					pos 	= "start", #
					actor 	= a, #
					partner = p, #
					dyad 	= paste0(a, "-", p),#
					a.effect = FE,#
					p.effect = FE + est_act[est_act$role==a, "est"],#
					r.effect = FE + est_act[est_act$role==a, "est"] + est_par[est_par$role==p, "est"]#
				))#
				# end of arrow#
				res <- rbind(res, data.frame(#
					pos		= "end", #
					actor 	= a, #
					partner = p, #
					dyad 	= paste0(a, "-", p),#
					a.effect = FE + est_act[est_act$role==a, "est"],#
					p.effect = FE + est_act[est_act$role==a, "est"] + est_par[est_par$role==p, "est"],#
					r.effect = FE + est_act[est_act$role==a, "est"] + est_par[est_par$role==p, "est"] + est_rel[est_rel$role==paste0(a, ".", p), "est"]#
				))#
			}#
		}#
	}#
#
	res2 <- melt(res, id.vars=c("actor", "partner", "dyad", "pos"))#
	res3 <- dcast(res2, variable + actor + partner + dyad ~ pos)#
	res3$variable <- factor(res3$variable, levels=c("a.effect", "p.effect", "r.effect"), labels=c("1-Actor effect", "2-Partner effect", "3-Relationship effect"))#
	res3$dyad <- factor(as.character(res3$dyad))
str(res3$dyad)
levles(res3$dyad)
levels(res3$dyad)
levels(relvar.long$dyad)
res3
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
res3$group <- res3$variable:res3$dyad#
	le <- length(unique(res3$variable))#
	res3$x2 <- rep(seq(1:(nrow(res3)/le)), le) + (as.numeric(res3$variable)-2)*.2  # manual dodging of arrows
res3
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package/R')
res3 <- dcast(res2, variable + dyad + actor + partner ~ pos)#
	res3$variable <- factor(res3$variable, levels=c("a.effect", "p.effect", "r.effect"), labels=c("1-Actor effect", "2-Partner effect", "3-Relationship effect"))#
	res3$dyad <- factor(as.character(res3$dyad))#
	res3$group <- res3$variable:res3$dyad#
	le <- length(unique(res3$variable))#
	res3$x2 <- rep(seq(1:(nrow(res3)/le)), le) + (as.numeric(res3$variable)-2)*.2  # manual dodging of arrows#
	FE_df <- data.frame(y=FE, lty="0-Family effect (horizontal baseline)")
res3
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
sourceDir <- function(path, trace = TRUE, ...) {#
   for (nm in list.files(path, pattern = "\\.[RrSsQq]$")) {#
      if(trace) cat(nm,":")           #
      source(file.path(path, nm), ...)#
      if(trace) cat("\n")#
   }#
}#
#
sourceDir("../package/R")#
library(lavaan)#
library(plyr)#
library(reshape2)#
library(ggplot2)#
library(shape)#
library(grid)#
library(scales)#
library(gridExtra)#
#
# alternatively: load from GitHub#
#library(devtools)#
#install_github("fSRM", "felice303")#
#library(fSRM)
plot(x)
plot(x)
plot(x, means=TRUE)
x
citation("fSRM")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::document()#
#
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::check()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::document()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::build_win()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::install()
plot(X)
plot(x)
plot(x, means=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::document()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/files')
setwd("/Users/Felix/Documents/R/Funktionen/GitHub/fSRM/package")#
devtools::install()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
library(dplyr)
names(all2)
summary(all2)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
dat <- select(all2, VA=PANAVA.VA, IM=IAFF.wc, IM2=IAFF.c, EM=INT)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
r1 <- RSA(VA ~ IM*EM, dat, center=TRUE, scale=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
aictab(r1, plot=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
dat <- na.omit(select(all2, VA=PANAVA.VA, IM=IAFF.wc, IM2=IAFF.c, EM=INT))
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
r1 <- RSA(VA ~ IM*EM, dat, center=TRUE, scale=TRUE)
aictab(r1, plot=TRUE)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
r2 <- RSA(VA ~ IM2*EM, dat, center=TRUE, scale=TRUE)#
aictab(r2, plot=TRUE)
r2
str(dat)
head(all2)
qplot(all2$wc, all2$IPOW) + geom_smooth()
qplot(all2$wc, all2$IACH) + geom_smooth()
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
dat <- read.csv("data.csv")#
#
library(BayesFactor)#
library(dplyr)#
library(ggplot2)#
#
# average#
dat2 <- dat %>% filter(character_nr > 0) %>% group_by(nr, condition) %>% summarise(rating = mean(rating))
dat2
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
ggplot(dat2, aes(x=condition, y=rating)) + geom_point(position=position_jitter(width=.2)) + geom_boxplot()
dat
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
dat2 <- dat %>% filter(character_nr > 0) %>% group_by(nr, condition) %>% dplyr::summarise(rating = mean(rating))
dat2
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
t.test(rating~condition, filter(dat2, condition %in% c("A", "B")))
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
dat2$rating[dat2$condition %in% c("A", "B")]
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
dat2$rating[dat2$condition %in% c("C")]
nrow(dat2)
?var.test
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
var.test(dat2$rating[dat2$condition %in% c("A", "B")], dat2$rating[dat2$condition %in% c("C")])
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
var(dat2$rating[dat2$condition %in% c("A", "B")])
setwd('/Users/Felix/Documents/LMU/Research/9 - Sonstiges/MM ABC')
var(dat2$rating[dat2$condition %in% c("C")])
## Start-up:#
library("ProjectTemplate")#
setwd("/Volumes/HDD/Dropbox/FA1b")#
#
sourceDir <- function(path, trace = TRUE, ...) {#
   for (nm in list.files(path, pattern = "\\.[RrSsQq]$")) {#
      if(trace) cat(nm,":")           #
      source(file.path(path, nm), ...)#
      if(trace) cat("\n")#
   }#
}#
sourceDir("helpers")#
#
load.project()
head(FA2)
write.csv("FA2", file="export/AllWords.csv")
write.csv(FA2, file="export/AllWords.csv")
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
dat <- na.omit(select(all2, PA=PANAVA.PA, VA=PANAVA.VA, IM=IAFF.wc, IM2=IAFF.c, EM=INT))
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/files/Paper-Latex/FIRM_data')
r3 <- RSA(PA ~ IM2*EM, dat, center=TRUE, scale=TRUE)#
aictab(r3, plot=TRUE)
compare(r3, plot=TRUE)
x <- r3
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
verbose=TRUE
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
plot=FALSE
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
if (table(sapply(x$models, is.null))["FALSE"] <= 1) {#
		stop("You need more than one models for comparison!")#
	}
attach(x$models)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
res <- data.frame()
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
free.max <- getFreeParameters(full)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
free.max
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
res1 <- cModels(list(cubic=cubic, full=full, IA=IA, additive=additive, diff=diff, null=null), set="directed", free.max)#
		if (verbose==TRUE & !is.null(res1)) {#
			cat("Testing directed difference models: Interaction, additive main effects, difference model :\n")#
			cat("-------------------------------------------------------------------------\n")#
			print(round(res1[, 1:13], 3))#
		}
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
res1 <- cModels(list(cubic=cubic, full=full, IA=IA, additive=additive, diff=diff, null=null), set="directed", free.max)
mL <- list(cubic=cubic, full=full, IA=IA, additive=additive, diff=diff, null=null)
mL
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
aL1 <- anovaList(mL)
aL1
modellist <- mL
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
mods <- modellist[!sapply(modellist, function(x) is.null(x))]
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
mods <- mods[!sapply(mods, function(x) !inspect(x, "converged"))]
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
if (length(mods) == 0) {#
		return(list(n.mods=0))#
	}#
    # put them in order (using df)#
    DF <- sapply(mods, fitmeasures, "df")
DF
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
mods <- mods[order(DF, decreasing = FALSE)]
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
pStr <- sapply(1:length(mods), function(x){ #
		if(x==1) {#
			paste("mods[[",x,"]]",sep = "")#
		} else {#
			paste("force(mods[[",x,"]])",sep = "")#
		}#
	})#
	pStr2 <- paste0("anova(", paste(pStr, collapse=", "), ")")
pStr2
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
a1 <- eval(parse(text = pStr2))
a1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
if (length(mods) > 1) {#
		rownames(a1) <- names(mods)#
	}
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
attr(a1, "n.mods") <- length(mods)
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
ANOVA=a1
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
list(ANOVA=a1, models=mods, n.mods=length(mods))
setwd('/Users/Felix/Documents/R/Funktionen/GitHub/RSA/package/R')
aL1 <- anovaList(mL)
?anovaList
anovaList
